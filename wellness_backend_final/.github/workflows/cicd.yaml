name: CI/CD Pipeline

on:
  push:
    branches:
      - "dev"
  pull_request:
    types: [closed]
    branches:
      - "main"

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/dev'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # AWS 자격 증명 설정
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # AWS ECR 로그인을 위한 설정
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      # Docker 이미지 빌드 및 태깅
      - name: Build Docker image
        run: |
          docker build -t wellnessapp:${{ github.sha }} .
          # GitHub SHA로 태그
          docker tag wellnessapp:${{ github.sha }} ${{ secrets.ECR_REPOSITORY_URI }}:${{ github.sha }}
          # latest로 태그
          docker tag wellnessapp:${{ github.sha }} ${{ secrets.ECR_REPOSITORY_URI }}:latest

      # Docker 이미지 푸시
      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.ECR_REPOSITORY_URI }}:${{ github.sha }}
          docker push ${{ secrets.ECR_REPOSITORY_URI }}:latest

  deploy_dev:
    name: Deploy to Development on EC2
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/dev'

    steps:
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      # ECR에서 Docker 이미지 pull
      - name: Pull Docker image from ECR
        run: |
          docker pull ${{ secrets.ECR_REPOSITORY_URI }}:latest

      # Docker 컨테이너 실행 (dev 환경용 DATABASE_URL 사용)
      - name: Run Docker container
        run: |
          docker run -d -p 8000:8000 \
            --name wellness-app \
            -e DATABASE_URL="${{ secrets.DATABASE_URL_DEV }}" \
            -e BUCKET_NAME="${{ secrets.BUCKET_NAME_DEV }}" \
            -e AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
            -e AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            -e AWS_REGION="${{ secrets.AWS_REGION }}" \
            -e MODEL_PATH="${{ secrets.MODEL_PATH }}" \
            -e KAKAO_RESTAPI_KEY="${{ secrets.KAKAO_RESTAPI_KEY }}" \
            -e KAKAO_REDIRECT_URL="${{ secrets.KAKAO_REDIRECT_URL }}" \
            -e SECRET_KEY="${{ secrets.SECRET_KEY }}" \
            -e ALGORITHM="${{ secrets.ALGORITHM }}" \
            -e ACCESS_TOKEN_EXPIRE_MINUTES="${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}" \
            -e REFRESH_TOKEN_EXPIRE_DAYS="${{ secrets.REFRESH_TOKEN_EXPIRE_DAYS }}" \
            ${{ secrets.ECR_REPOSITORY_URI }}:latest

  deploy_prod:
    name: Deploy to Production on EC2
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'

    steps:
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      # ECR에서 Docker 이미지 pull (프로덕션)
      - name: Pull Docker image from ECR
        run: |
          docker pull ${{ secrets.ECR_REPOSITORY_URI }}:latest

      # Docker 컨테이너 실행 (prod 환경용 DATABASE_URL 사용)
      - name: Run Docker container
        run: |
          docker run -d -p 8000:8000 \
            --name wellness-app \
            -e DATABASE_URL="${{ secrets.DATABASE_URL_PROD }}" \
            -e BUCKET_NAME="${{ secrets.BUCKET_NAME_PROD }}" \
            -e AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
            -e AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            -e AWS_REGION="${{ secrets.AWS_REGION }}" \
            -e MODEL_PATH="${{ secrets.MODEL_PATH }}" \
            -e KAKAO_RESTAPI_KEY="${{ secrets.KAKAO_RESTAPI_KEY }}" \
            -e KAKAO_REDIRECT_URL="${{ secrets.KAKAO_REDIRECT_URL }}" \
            -e SECRET_KEY="${{ secrets.SECRET_KEY }}" \
            -e ALGORITHM="${{ secrets.ALGORITHM }}" \
            -e ACCESS_TOKEN_EXPIRE_MINUTES="${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}" \
            -e REFRESH_TOKEN_EXPIRE_DAYS="${{ secrets.REFRESH_TOKEN_EXPIRE_DAYS }}" \
            ${{ secrets.ECR_REPOSITORY_URI }}:latest
